diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index 494890cc23..7d12325e24 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -220,7 +220,8 @@ class HashedFilesMixin:
 
         # where to store the new paths
         hashed_files = {}
-
+        yielded = set()
+    
         # build a list of adjustable files
         adjustable_paths = [
             path for path in paths
@@ -229,22 +230,30 @@ class HashedFilesMixin:
         # Do a single pass first. Post-process all files once, then repeat for
         # adjustable files.
         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):
+            # Only yield if processed and not yielded already.
+            if not processed:
+                continue
+            if name in yielded:
+                continue
             yield name, hashed_name, processed
-
+            yielded.add(name)
+    
         paths = {path: paths[path] for path in adjustable_paths}
-
+    
         for i in range(self.max_post_process_passes):
             substitutions = False
             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
-                yield name, hashed_name, processed
                 substitutions = substitutions or subst
-
+                if not processed:
+                    continue
+                if name in yielded:
+                    continue
+                yield name, hashed_name, processed
+                yielded.add(name)
+    
             if not substitutions:
                 break
 
-        if substitutions:
-            yield 'All', None, RuntimeError('Max post-process passes exceeded.')
-
         # Store the processed paths
         self.hashed_files.update(hashed_files)
 
@@ -439,3 +448,4 @@ class ConfiguredStorage(LazyObject):
 
 
 staticfiles_storage = ConfiguredStorage()
+
