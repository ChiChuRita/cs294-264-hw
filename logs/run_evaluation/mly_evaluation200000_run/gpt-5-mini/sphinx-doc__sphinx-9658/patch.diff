diff --git a/sphinx/util/typing.py b/sphinx/util/typing.py
index 87707d48f..ae1f70034 100644
--- a/sphinx/util/typing.py
+++ b/sphinx/util/typing.py
@@ -200,10 +200,10 @@ def _restify_py37(cls: Optional[Type]) -> str:
         return ':py:class:`%s`' % cls.__forward_arg__
     else:
         # not a class (ex. TypeVar)
-        if cls.__module__ == 'typing':
-            return ':py:obj:`~%s.%s`' % (cls.__module__, cls.__name__)
-        else:
-            return ':py:obj:`%s.%s`' % (cls.__module__, cls.__name__)
+        name = getattr(cls, '__name__', None)
+        if name:
+            return ':py:obj:`~%s.%s`' % (cls.__module__, name) if cls.__module__ == 'typing' else ':py:obj:`%s.%s`' % (cls.__module__, name)
+        return repr(cls)
 
 
 def _restify_py36(cls: Optional[Type]) -> str:
@@ -286,10 +286,13 @@ def _restify_py36(cls: Optional[Type]) -> str:
             return ':py:obj:`%s.%s`' % (cls.__module__, cls._name)
     elif hasattr(cls, '__name__'):
         # not a class (ex. TypeVar)
-        if cls.__module__ == 'typing':
-            return ':py:obj:`~%s.%s`' % (cls.__module__, cls.__name__)
-        else:
-            return ':py:obj:`%s.%s`' % (cls.__module__, cls.__name__)
+        name = getattr(cls, '__name__', None)
+        if name:
+            if cls.__module__ == 'typing':
+                return ':py:obj:`~%s.%s`' % (cls.__module__, name)
+            else:
+                return ':py:obj:`%s.%s`' % (cls.__module__, name)
+        return repr(cls)
     else:
         # others (ex. Any)
         if cls.__module__ == 'typing':
@@ -468,3 +471,5 @@ deprecated_alias('sphinx.util.typing',
                      'DirectiveOption': Callable[[str], Any],
                  },
                  RemovedInSphinx60Warning)
+
+
