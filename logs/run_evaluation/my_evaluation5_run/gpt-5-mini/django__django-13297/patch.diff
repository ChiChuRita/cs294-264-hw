diff --git a/django/views/generic/base.py b/django/views/generic/base.py
index ea5baca08d..f1076a4bef 100644
--- a/django/views/generic/base.py
+++ b/django/views/generic/base.py
@@ -27,6 +27,25 @@ class ContextMixin:
         kwargs.setdefault('view', self)
         if self.extra_context is not None:
             kwargs.update(self.extra_context)
+        # Evaluate any SimpleLazyObject values so that the context contains real
+        # values. This avoids exposing SimpleLazyObject instances in the context
+        # (e.g. URL kwargs), which can cause errors when consumers expect plain
+        # values (like using them in queries).
+        for key, value in list(kwargs.items()):
+            if isinstance(value, SimpleLazyObject):
+                try:
+                    # Force evaluation of the lazy object. _setup() will initialize
+                    # the wrapped object if it hasn't been already.
+                    value._setup()
+                except Exception:
+                    # If forcing evaluation fails for some reason, leave the
+                    # lazy object as-is to avoid raising unexpected errors here.
+                    continue
+                try:
+                    kwargs[key] = value._wrapped
+                except Exception:
+                    # On any unexpected error, don't replace the value.
+                    kwargs[key] = value
         return kwargs
 
 
