diff --git a/astropy/utils/misc.py b/astropy/utils/misc.py
index de3fb01d1..eab563041 100644
--- a/astropy/utils/misc.py
+++ b/astropy/utils/misc.py
@@ -528,13 +528,50 @@ class InheritDocstrings(type):
                 not key.startswith('_'))
 
         for key, val in dct.items():
-            if (inspect.isfunction(val) and
-                is_public_member(key) and
-                val.__doc__ is None):
+            if not is_public_member(key):
+                continue
+
+            # Handle plain functions, staticmethod/classmethod wrappers, and
+            # properties. For each, determine whether the object defined in
+            # this class is missing a docstring and if so, try to inherit it
+            # from the first base class that provides it.
+            if inspect.isfunction(val):
+                needs_inherit = (val.__doc__ is None)
+                def _set_doc(doc):
+                    if doc is not None:
+                        val.__doc__ = doc
+            elif isinstance(val, (staticmethod, classmethod)):
+                func = val.__func__
+                needs_inherit = (func.__doc__ is None)
+                def _set_doc(doc):
+                    if doc is not None:
+                        func.__doc__ = doc
+            elif isinstance(val, property):
+                # For properties, inherit the fget docstring (property.__doc__
+                # typically proxies to fget.__doc__). If no fget, nothing to do.
+                fget = val.fget
+                if fget is None:
+                    continue
+                needs_inherit = (fget.__doc__ is None)
+                def _set_doc(doc):
+                    if doc is not None:
+                        fget.__doc__ = doc
+            else:
+                continue
+
+            if needs_inherit:
                 for base in cls.__mro__[1:]:
-                    super_method = getattr(base, key, None)
-                    if super_method is not None:
-                        val.__doc__ = super_method.__doc__
+                    super_attr = getattr(base, key, None)
+                    if super_attr is None:
+                        continue
+                    # Unwrap descriptors on the base class to get at the
+                    # underlying docstring.
+                    if isinstance(super_attr, (staticmethod, classmethod)):
+                        doc = getattr(super_attr.__func__, '__doc__', None)
+                    else:
+                        doc = getattr(super_attr, '__doc__', None)
+                    if doc:
+                        _set_doc(doc)
                         break
 
         super().__init__(name, bases, dct)
