diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index 494890cc23..b6a3e366fc 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -226,24 +226,35 @@ class HashedFilesMixin:
             path for path in paths
             if matches_patterns(path, self._patterns)
         ]
+
+        # Track which original names we've already yielded back to callers to
+        # avoid duplicate yields when multiple passes are performed.
+        yielded_names = set()
+
         # Do a single pass first. Post-process all files once, then repeat for
-        # adjustable files.
+        # adjustable files. Only yield each original name once.
         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):
-            yield name, hashed_name, processed
+            if name not in yielded_names:
+                yielded_names.add(name)
+                yield name, hashed_name, processed
 
         paths = {path: paths[path] for path in adjustable_paths}
 
         for i in range(self.max_post_process_passes):
             substitutions = False
             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
-                yield name, hashed_name, processed
+                if name not in yielded_names:
+                    yielded_names.add(name)
+                    yield name, hashed_name, processed
                 substitutions = substitutions or subst
 
             if not substitutions:
                 break
 
         if substitutions:
-            yield 'All', None, RuntimeError('Max post-process passes exceeded.')
+            # Only yield the 'All' failure once.
+            if 'All' not in yielded_names:
+                yield 'All', None, RuntimeError('Max post-process passes exceeded.')
 
         # Store the processed paths
         self.hashed_files.update(hashed_files)
